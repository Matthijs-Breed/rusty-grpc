<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pokerhands.proto

namespace PokerHands\BestHandResult;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>PokerHands.BestHandResult.ResultCard</code>
 */
class ResultCard extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Rank rank = 1;</code>
     */
    private $rank = 0;
    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Suit suit = 2;</code>
     */
    private $suit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $rank
     *     @type int $suit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Pokerhands::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Rank rank = 1;</code>
     * @return int
     */
    public function getRank()
    {
        return $this->rank;
    }

    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Rank rank = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRank($var)
    {
        GPBUtil::checkEnum($var, \PokerHands\BestHandResult_ResultCard_Rank::class);
        $this->rank = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Suit suit = 2;</code>
     * @return int
     */
    public function getSuit()
    {
        return $this->suit;
    }

    /**
     * Generated from protobuf field <code>.PokerHands.BestHandResult.ResultCard.Suit suit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setSuit($var)
    {
        GPBUtil::checkEnum($var, \PokerHands\BestHandResult_ResultCard_Suit::class);
        $this->suit = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ResultCard::class, \PokerHands\BestHandResult_ResultCard::class);

